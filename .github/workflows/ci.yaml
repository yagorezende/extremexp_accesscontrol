name: CI ðŸš¥
run-name: Continuous Integration ðŸš¥
on:
  workflow_call:
    inputs:
      image_tag:
        required: false
        type: string
  pull_request:
    branches:
      - main
      - development
jobs:
  pylint:
    name: Python lint
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5.1.0
        with:
          python-version: 3.10.14
      - run: |
          # TODO: Optimize this command
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - run: |
          shopt -s globstar && pylint --load-plugins pylint_flask --fail-under 8 **/*.py -d C0103,C0114,C0115,C0116,C0301,C0303,W0221,E1101,W0611
  hadolint:
    name: Dockerfile lint
    runs-on: ubuntu-latest
    steps:
      - name: Lint Dockerfile
        uses: actions/checkout@v4

      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          failure-threshold: error
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Pull Request
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const output = `
            #### Hadolint: \`${{ steps.hadolint.outcome }}\`
            \`\`\`
            ${process.env.HADOLINT_RESULTS}
            \`\`\`
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
  build:
    name: Build
    needs: [ pylint, hadolint ]
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Get tag # This is not used for now, we use tag from cd-prod.yaml or cd-dev.yaml workflows
        id: repository
        run: echo "tag=$(git describe --tags HEAD)" > $GITHUB_ENV
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v5
        with:
          push: false